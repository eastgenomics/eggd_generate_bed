{
  "name": "eggd_generate_bed",
  "title": "eggd_generate_bed",
  "summary": "Generates a BED file for a given panel name",
  "dxapi": "1.0.0",
  "version": "1.3.0",
  "properties": {
    "githubRelease": "v1.3.0"
  },
  "inputSpec": [
    {
      "name": "gene_panels",
      "label": "Gemini gene_panels file (from 001_Reference)",
      "class": "file",
      "optional": false,
      "suggestions": [
        {
          "project": "project-Fkb6Gkj433GVVvj73J7x8KbV",
          "path": "/dynamic_files/gene_panels/"
        }
      ],
      "patterns": [
        "*"
      ],
      "help": ""
    },
    {
      "name": "nirvana_genes2transcripts",
      "label": "Nirvana genes2transcripts file (from 001_Reference)",
      "class": "file",
      "optional": false,
      "suggestions": [
        {
          "project": "project-Fkb6Gkj433GVVvj73J7x8KbV",
          "path": "/dynamic_files/nirvana_genes2transcripts/"
        }
      ],
      "patterns": [
        "*"
      ],
      "help": ""
    },
    {
      "name": "exons",
      "label": "Exons file (from 001_Reference)",
      "class": "file",
      "optional": false,
      "suggestions": [
        {
          "project": "project-Fkb6Gkj433GVVvj73J7x8KbV",
          "path": "/annotation/b37/"
        }
      ],
      "patterns": [
        "*"
      ],
      "help": ""
    },
    {
      "name": "additional_regions",
      "label": "File containing chrom, start, end, transcript, *, gene/panel name.",
      "class": "file",
      "optional": true,
      "patterns": ["*.tsv", "*.bed"],
      "help": "Primarily used for generating panels for CNV annotation where additional regions are required"
    },
    {
      "name": "manifest",
      "label": "Bioinformatics manifest",
      "class": "file",
      "optional": true,
      "suggestions": [
        {
          "project": "project-Fkb6Gkj433GVVvj73J7x8KbV",
          "path": "/dynamic_files/BioinformaticManifest/"
        }
      ],
      "patterns": [
        "*"
      ],
      "help": "Used to get appropriate panel to generate bed file. Must also provide a sample identifying file (file name used to select panel)."
    },
    {
      "name": "sample_file",
      "label": "File containing sample id as prefix of file name followed by a '_'. Must also provide the manifest file to get appropriate panel.",
      "class": "file",
      "optional": true,
      "patterns": [
        "*"
      ],
      "help": ""
    },
    {
      "name": "panel",
      "label": "Panel name",
      "class": "string",
      "optional": true,
      "help": "Panel and / or gene name(s), semi colon separated for multiple panels. May either specify panel here, or by providing the manifest and a sample identifying file."
    },
    {
      "name": "output_file_prefix",
      "label": "Output file prefix",
      "class": "string",
      "optional": true,
      "help": ""
    },
    {
      "name": "flank",
      "label": "Flank",
      "class": "int",
      "optional": true,
      "help": "flank to apply to start and end of regions in bed file"
    }
  ],
  "outputSpec": [
    {
      "name": "bed_file",
      "label": "Panel bed file",
      "class": "file",
      "patterns": [
        "*"
      ],
      "help": ""
    }
  ],
  "runSpec": {
    "distribution": "Ubuntu",
    "release": "20.04",
    "version": "0",
    "interpreter": "bash",
    "file": "src/eggd_generate_bed.sh",
    "timeoutPolicy": {
      "*": {
        "hours": 1
      }
    }
  },
  "developers":[
    "user-sophier",
    "org-emee_1"
  ],
  "authorizedUsers": [
    "org-emee_1"
  ],
  "access": {
    "project": "CONTRIBUTE"
  },
  "regionalOptions": {
    "aws:eu-central-1": {
      "systemRequirements": {
        "*": {
          "instanceType": "mem1_ssd1_v2_x4"
        }
      }
    }
  }
}
